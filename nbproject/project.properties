annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=CastleOfQuestions
application.vendor=vm_su
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
compile.on.save=true
compile.on.save.unsupported.javafx=true
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/CastleOfQuestions.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.commons-lang3-3.8.1.jar=C:\\JARS_PI_2\\commons-lang3-3.8.1.jar
file.reference.javacpp.jar=C:\\Jars_PI_2\\javacpp.jar
file.reference.javacv-platform.jar=C:\\Jars_PI_2\\javacv-platform.jar
file.reference.javacv.jar=C:\\Jars_PI_2\\javacv.jar
file.reference.jfoenix.jar=C:\\Jars_PI_2\\jfoenix.jar
file.reference.opencv-android-arm.jar=C:\\Jars_PI_2\\opencv-android-arm.jar
file.reference.opencv-android-arm64.jar=C:\\Jars_PI_2\\opencv-android-arm64.jar
file.reference.opencv-android-x86.jar=C:\\Jars_PI_2\\opencv-android-x86.jar
file.reference.opencv-android-x86_64.jar=C:\\Jars_PI_2\\opencv-android-x86_64.jar
file.reference.opencv-ios-arm64.jar=C:\\Jars_PI_2\\opencv-ios-arm64.jar
file.reference.opencv-ios-x86_64.jar=C:\\Jars_PI_2\\opencv-ios-x86_64.jar
file.reference.opencv-linux-armhf.jar=C:\\Jars_PI_2\\opencv-linux-armhf.jar
file.reference.opencv-linux-ppc64le.jar=C:\\Jars_PI_2\\opencv-linux-ppc64le.jar
file.reference.opencv-linux-x86.jar=C:\\Jars_PI_2\\opencv-linux-x86.jar
file.reference.opencv-linux-x86_64.jar=C:\\Jars_PI_2\\opencv-linux-x86_64.jar
file.reference.opencv-macosx-x86_64.jar=C:\\Jars_PI_2\\opencv-macosx-x86_64.jar
file.reference.opencv-platform.jar=C:\\Jars_PI_2\\opencv-platform.jar
file.reference.opencv-windows-x86.jar=C:\\Jars_PI_2\\opencv-windows-x86.jar
file.reference.opencv-windows-x86_64.jar=C:\\Jars_PI_2\\opencv-windows-x86_64.jar
file.reference.opencv.jar=C:\\Jars_PI_2\\opencv.jar
includes=**
# Non-JavaFX jar file creation is deactivated in JavaFX 2.0+ projects
jar.archive.disabled=true
jar.compress=false
javac.classpath=\
    ${javafx.classpath.extension}:\
    ${file.reference.javacpp.jar}:\
    ${file.reference.commons-lang3-3.8.1.jar}:\
    ${file.reference.javacv-platform.jar}:\
    ${file.reference.javacv.jar}:\
    ${file.reference.jfoenix.jar}:\
    ${file.reference.opencv-android-arm.jar}:\
    ${file.reference.opencv-android-arm64.jar}:\
    ${file.reference.opencv-android-x86.jar}:\
    ${file.reference.opencv-android-x86_64.jar}:\
    ${file.reference.opencv-ios-arm64.jar}:\
    ${file.reference.opencv-ios-x86_64.jar}:\
    ${file.reference.opencv-linux-armhf.jar}:\
    ${file.reference.opencv-linux-ppc64le.jar}:\
    ${file.reference.opencv-linux-x86.jar}:\
    ${file.reference.opencv-linux-x86_64.jar}:\
    ${file.reference.opencv-macosx-x86_64.jar}:\
    ${file.reference.opencv-platform.jar}:\
    ${file.reference.opencv-windows-x86.jar}:\
    ${file.reference.opencv-windows-x86_64.jar}:\
    ${file.reference.opencv.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.external.vm=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
javafx.application.implementation.version=1.0
javafx.binarycss=false
javafx.classpath.extension=\
    ${java.home}/lib/javaws.jar:\
    ${java.home}/lib/deploy.jar:\
    ${java.home}/lib/plugin.jar
javafx.deploy.adddesktopshortcut=false
javafx.deploy.addstartmenushortcut=false
javafx.deploy.allowoffline=true
# If true, application update mode is set to 'background', if false, update mode is set to 'eager'
javafx.deploy.backgroundupdate=false
javafx.deploy.disable.proxy=false
javafx.deploy.embedJNLP=true
javafx.deploy.includeDT=true
javafx.deploy.installpermanently=false
javafx.deploy.permissionselevated=false
# Definir como verdadeiro impede a cria\u00e7\u00e3o de c\u00f3pia tempor\u00e1ria de artefatos de implanta\u00e7\u00e3o antes de cada execu\u00e7\u00e3o (desativa as execu\u00e7\u00f5es atuais)
javafx.disable.concurrent.runs=false
# Definir como verdadeiro ativa v\u00e1rias execu\u00e7\u00f5es simult\u00e2neas do mesmo WebStart ou projeto Run-in-Browser
javafx.enable.concurrent.external.runs=false
# This is a JavaFX project
javafx.enabled=true
javafx.fallback.class=com.javafx.main.NoJavaFXFallback
# Main class for JavaFX
javafx.main.class=Telas.Menuinicial
javafx.preloader.class=
# This project does not use Preloader
javafx.preloader.enabled=false
javafx.preloader.jar.filename=
javafx.preloader.jar.path=
javafx.preloader.project.path=
javafx.preloader.type=none
# Set true for GlassFish only. Rebases manifest classpaths of JARs in lib dir. Not usable with signed JARs.
javafx.rebase.libs=false
javafx.run.height=600
javafx.run.width=800
javafx.signing.blob=false
javafx.signing.enabled=false
javafx.signing.type=notsigned
# Pre-JavaFX 2.0 WebStart is deactivated in JavaFX 2.0+ projects
jnlp.enabled=false
# Main class for Java launcher
main.class=com.javafx.main.Main
# Para uma melhor seguran\u00e7a, especifique um atributo de manifesto da Base de c\u00f3digo mais restrito para impedir que RIAs sejam adaptados
manifest.custom.codebase=*
# Especificar o atributo de manifesto de Permiss\u00f5es para substituir o default (op\u00e7\u00f5es: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
native.bundling.enabled=false
no.dependencies=true
platform.active=default_platform
run.classpath=\
    ${dist.jar}:\
    ${javac.classpath}:\
    ${build.classes.dir}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
